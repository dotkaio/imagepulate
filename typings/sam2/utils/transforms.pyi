"""
This type stub file was generated by pyright.
"""

import torch
import torch.nn as nn

class SAM2Transforms(nn.Module):
    def __init__(self, resolution, mask_threshold, max_hole_area=..., max_sprinkle_area=...) -> None:
        """
        Transforms for SAM2.
        """
        ...
    
    def __call__(self, x): # -> Any:
        ...
    
    def forward_batch(self, img_list): # -> Tensor:
        ...
    
    def transform_coords(self, coords: torch.Tensor, normalize=..., orig_hw=...) -> torch.Tensor:
        """
        Expects a torch tensor with length 2 in the last dimension. The coordinates can be in absolute image or normalized coordinates,
        If the coords are in absolute image coordinates, normalize should be set to True and original image size is required.

        Returns
            Un-normalized coordinates in the range of [0, 1] which is expected by the SAM2 model.
        """
        ...
    
    def transform_boxes(self, boxes: torch.Tensor, normalize=..., orig_hw=...) -> torch.Tensor:
        """
        Expects a tensor of shape Bx4. The coordinates can be in absolute image or normalized coordinates,
        if the coords are in absolute image coordinates, normalize should be set to True and original image size is required.
        """
        ...
    
    def postprocess_masks(self, masks: torch.Tensor, orig_hw) -> torch.Tensor:
        """
        Perform PostProcessing on output masks.
        """
        ...
    


